{"Classes/MAPUploadManagerStatus.html#/c:objc(cs)MAPUploadManagerStatus(py)uploading":{"name":"uploading","abstract":"<p>The upload status that defines if we are currently uploading or not.</p>","parent_name":"MAPUploadManagerStatus"},"Classes/MAPUploadManagerStatus.html#/c:objc(cs)MAPUploadManagerStatus(py)processing":{"name":"processing","abstract":"<p>The processing status that defines if we are currently processing or not.</p>","parent_name":"MAPUploadManagerStatus"},"Classes/MAPUploadManagerStatus.html#/c:objc(cs)MAPUploadManagerStatus(py)imageCount":{"name":"imageCount","abstract":"<p>Number of images scheduled to upload.</p>","parent_name":"MAPUploadManagerStatus"},"Classes/MAPUploadManagerStatus.html#/c:objc(cs)MAPUploadManagerStatus(py)imagesUploaded":{"name":"imagesUploaded","abstract":"<p>Number of images that have been sucessfully uploaded.</p>","parent_name":"MAPUploadManagerStatus"},"Classes/MAPUploadManagerStatus.html#/c:objc(cs)MAPUploadManagerStatus(py)imagesFailed":{"name":"imagesFailed","abstract":"<p>Number of images that failed to uploaded.</p>","parent_name":"MAPUploadManagerStatus"},"Classes/MAPUploadManagerStatus.html#/c:objc(cs)MAPUploadManagerStatus(py)imagesProcessed":{"name":"imagesProcessed","abstract":"<p>Number of images that have been processed.</p>","parent_name":"MAPUploadManagerStatus"},"Classes/MAPUploadManagerStatus.html#/c:objc(cs)MAPUploadManagerStatus(py)uploadSpeedBytesPerSecond":{"name":"uploadSpeedBytesPerSecond","abstract":"<p>The current upload speed in bytes/s.</p>","parent_name":"MAPUploadManagerStatus"},"Protocols/MAPUploadManagerDelegate.html#/c:objc(pl)MAPUploadManagerDelegate(im)imageProcessed:image:status:":{"name":"-imageProcessed:image:status:","abstract":"<p>Delegate method for when an image is processed.</p>","parent_name":"MAPUploadManagerDelegate"},"Protocols/MAPUploadManagerDelegate.html#/c:objc(pl)MAPUploadManagerDelegate(im)processingFinished:status:":{"name":"-processingFinished:status:","abstract":"<p>Delegate method for when all images have been processed.</p>","parent_name":"MAPUploadManagerDelegate"},"Protocols/MAPUploadManagerDelegate.html#/c:objc(pl)MAPUploadManagerDelegate(im)processingStopped:status:":{"name":"-processingStopped:status:","abstract":"<p>Delegate method for when image processing has was stopped by calling stopProcessing.</p>","parent_name":"MAPUploadManagerDelegate"},"Protocols/MAPUploadManagerDelegate.html#/c:objc(pl)MAPUploadManagerDelegate(im)imageUploaded:image:status:":{"name":"-imageUploaded:image:status:","abstract":"<p>Delegate method for when an image was sucessfully uploaded.</p>","parent_name":"MAPUploadManagerDelegate"},"Protocols/MAPUploadManagerDelegate.html#/c:objc(pl)MAPUploadManagerDelegate(im)imageFailed:image:status:error:":{"name":"-imageFailed:image:status:error:","abstract":"<p>Delegate method for when an image failed to upload.</p>","parent_name":"MAPUploadManagerDelegate"},"Protocols/MAPUploadManagerDelegate.html#/c:objc(pl)MAPUploadManagerDelegate(im)uploadedData:bytesSent:status:":{"name":"-uploadedData:bytesSent:status:","abstract":"<p>Delegate method for when a chunk of data has been uploaded.</p>","parent_name":"MAPUploadManagerDelegate"},"Protocols/MAPUploadManagerDelegate.html#/c:objc(pl)MAPUploadManagerDelegate(im)uploadFinished:status:":{"name":"-uploadFinished:status:","abstract":"<p>Delegate method for when all images have been uploaded.</p>","parent_name":"MAPUploadManagerDelegate"},"Protocols/MAPUploadManagerDelegate.html#/c:objc(pl)MAPUploadManagerDelegate(im)uploadStopped:status:":{"name":"-uploadStopped:status:","abstract":"<p>Delegate method for when image uploading has was stopped by calling stopUpload.</p>","parent_name":"MAPUploadManagerDelegate"},"Classes/MAPUploadManager.html#/c:objc(cs)MAPUploadManager(py)delegate":{"name":"delegate","abstract":"<p>The delegate of the upload manager object.</p>","parent_name":"MAPUploadManager"},"Classes/MAPUploadManager.html#/c:objc(cs)MAPUploadManager(py)testUpload":{"name":"testUpload","abstract":"<p>Set this flag to YES if you want to test your upload. It uploads to a test","parent_name":"MAPUploadManager"},"Classes/MAPUploadManager.html#/c:objc(cs)MAPUploadManager(py)deleteAfterUpload":{"name":"deleteAfterUpload","abstract":"<p>Set this flag to NO if you want to keep your local images efter they have been","parent_name":"MAPUploadManager"},"Classes/MAPUploadManager.html#/c:objc(cs)MAPUploadManager(py)allowsCellularAccess":{"name":"allowsCellularAccess","abstract":"<p>Set this flag to YES if you want to allow uploads via cellular network.</p>","parent_name":"MAPUploadManager"},"Classes/MAPUploadManager.html#/c:objc(cs)MAPUploadManager(cm)sharedManager":{"name":"+sharedManager","abstract":"<p>Returns the shared upload manager object.</p>","parent_name":"MAPUploadManager"},"Classes/MAPUploadManager.html#/c:objc(cs)MAPUploadManager(im)processSequences:":{"name":"-processSequences:","abstract":"<p>Starts to process the sequences in the array.</p>","parent_name":"MAPUploadManager"},"Classes/MAPUploadManager.html#/c:objc(cs)MAPUploadManager(im)stopProcessing":{"name":"-stopProcessing","abstract":"<p>Stops the image processing.</p>","parent_name":"MAPUploadManager"},"Classes/MAPUploadManager.html#/c:objc(cs)MAPUploadManager(im)processAndUploadSequences:":{"name":"-processAndUploadSequences:","abstract":"<p>Starts to process and upload the sequences in the array.</p>","parent_name":"MAPUploadManager"},"Classes/MAPUploadManager.html#/c:objc(cs)MAPUploadManager(im)stopUpload":{"name":"-stopUpload","abstract":"<p>Stops the image processing and upload.</p>","parent_name":"MAPUploadManager"},"Classes/MAPUploadManager.html#/c:objc(cs)MAPUploadManager(im)getStatus":{"name":"-getStatus","abstract":"<p>Returns the current status of the Upload Manager.</p>","parent_name":"MAPUploadManager"},"Classes/MAPApplicationDelegate.html#/c:objc(cs)MAPApplicationDelegate(cm)application:handleEventsForBackgroundURLSession:completionHandler:":{"name":"+application:handleEventsForBackgroundURLSession:completionHandler:","abstract":"<p>Make sure to call this method in the same method in your","parent_name":"MAPApplicationDelegate"},"Classes/MAPApplicationDelegate.html":{"name":"MAPApplicationDelegate","abstract":"<p>The <code>MAPApplicationDelegate</code> is used to handle the background uploading process"},"Classes/MAPUploadManager.html":{"name":"MAPUploadManager","abstract":"<p>The <code>MAPUploadManager</code> class handles both image processing and uploading.</p>"},"Protocols/MAPUploadManagerDelegate.html":{"name":"MAPUploadManagerDelegate","abstract":"<p>This protocol is used for notifying the delegate what&rsquo;s happening during"},"Classes/MAPUploadManagerStatus.html":{"name":"MAPUploadManagerStatus","abstract":"<p>The <code>MAPUploadManagerStatus</code> class encapsulates the information about the upload"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(py)directionOffset":{"name":"directionOffset","abstract":"<p>The direction offset in degrees. -1 means not set, 0 means straight forward,","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(py)timeOffset":{"name":"timeOffset","abstract":"<p>The time offset in milliseconds.</p>","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(py)sequenceDate":{"name":"sequenceDate","abstract":"<p>The date the sequence was captured.</p>","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(py)path":{"name":"path","abstract":"<p>The path to the directory containing this sequence.</p>","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(py)gpxPath":{"name":"gpxPath","abstract":"<p>The path to the GPX file for this sequence. Can be nil.</p>","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(py)organizationKey":{"name":"organizationKey","abstract":"<p>The organization this sequence belongs to. Default is nil.</p>","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(py)isPrivate":{"name":"isPrivate","abstract":"<p>If the sequence is private or public. Only used if organizationKey is set.","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(py)sequenceKey":{"name":"sequenceKey","abstract":"<p>The unique key of this sequence.</p>","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(py)device":{"name":"device","abstract":"<p>The device used to capture this sequence.</p>","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(py)imageCount":{"name":"imageCount","abstract":"<p>Number of images in this sequence.</p>","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(py)sequenceSize":{"name":"sequenceSize","abstract":"<p>The size in bytes of the all the images in this sequence.</p>","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(py)rigSequenceUUID":{"name":"rigSequenceUUID","abstract":"<p>The common identifier of this sequence for a rig. This is used to connect","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(py)rigUUID":{"name":"rigUUID","abstract":"<p>The unique identifier of the rig used to capture this sequence.</p>","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(im)initWithDevice:":{"name":"-initWithDevice:","abstract":"<p>Creates a new sequence for a specific device with the current date.</p>","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(im)initWithDevice:andDate:":{"name":"-initWithDevice:andDate:","abstract":"<p>Creates a new sequence for a specific device with a specific date.</p>","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(im)initWithPath:parseGpx:":{"name":"-initWithPath:parseGpx:","abstract":"<p>Creates and initilizes a sequence from an existing sequence.</p>","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(im)addImageWithData:date:location:":{"name":"-addImageWithData:date:location:","abstract":"<p>Adds an image to the sequence.</p>","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(im)addImageWithPath:date:location:":{"name":"-addImageWithPath:date:location:","abstract":"<p>Adds an image to the sequence.</p>","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(im)deleteImage:":{"name":"-deleteImage:","abstract":"<p>Deletes an image.</p>","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(im)deleteAllImages":{"name":"-deleteAllImages","abstract":"<p>Deletes all the images in this sequence.</p>","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(im)getImages":{"name":"-getImages","abstract":"<p>Gets the images in this sequence as an array of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/MAPImage.html\">MAPImage</a></code> objects.</p>","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(im)getImagesAsync:":{"name":"-getImagesAsync:","abstract":"<p>Gets the images in this sequence as an array of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/MAPImage.html\">MAPImage</a></code> objects.</p>","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(im)addLocation:":{"name":"-addLocation:","abstract":"<p>Adds a location to the sequence.</p>","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(im)addGpx:done:":{"name":"-addGpx:done:","abstract":"<p>Adds all locations from a GPX file to the sequence.</p>","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(im)getLocationsAsync:":{"name":"-getLocationsAsync:","abstract":"<p>Gets the locations in this sequence as an array of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/MAPLocation.html\">MAPLocation</a></code> objects.</p>","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(im)locationForDate:":{"name":"-locationForDate:","abstract":"<p>Gets the location for a specific date.</p>","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(im)processImage:":{"name":"-processImage:","abstract":"<p>Adds Mapillary EXIF tags from the GPX file and also updates the GPS tags.</p>","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(im)isLocked":{"name":"-isLocked","abstract":"<p>Determines if this sequence is locked for editing.</p>","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(im)savePropertyChanges:":{"name":"-savePropertyChanges:","abstract":"<p>Saves any property changes you have made to this sequence. Note that changes","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(im)hasGpxFile":{"name":"-hasGpxFile","abstract":"<p>Checks if there is a GPX file generated or not.</p>","parent_name":"MAPSequence"},"Classes/MAPSequence.html#/c:objc(cs)MAPSequence(im)getPreviewImage":{"name":"-getPreviewImage","abstract":"<p>Returns a MAPImage object suitable for a visual preview of this sequence.</p>","parent_name":"MAPSequence"},"Classes/MAPLocation.html#/c:objc(cs)MAPLocation(py)location":{"name":"location","abstract":"<p>The actual <code>CLLocation</code> returned from a CLLocationManager.</p>","parent_name":"MAPLocation"},"Classes/MAPLocation.html#/c:objc(cs)MAPLocation(py)magneticHeading":{"name":"magneticHeading","abstract":"<p>The magnetic heading when this location was recorded.</p>","parent_name":"MAPLocation"},"Classes/MAPLocation.html#/c:objc(cs)MAPLocation(py)trueHeading":{"name":"trueHeading","abstract":"<p>The true heading when this location was recorded.</p>","parent_name":"MAPLocation"},"Classes/MAPLocation.html#/c:objc(cs)MAPLocation(py)headingAccuracy":{"name":"headingAccuracy","abstract":"<p>The heading accuracy when this location was recorded.</p>","parent_name":"MAPLocation"},"Classes/MAPLocation.html#/c:objc(cs)MAPLocation(py)timestamp":{"name":"timestamp","abstract":"<p>The date when this location was recorded.</p>","parent_name":"MAPLocation"},"Classes/MAPLocation.html#/c:objc(cs)MAPLocation(py)deviceMotionX":{"name":"deviceMotionX","abstract":"<p>The device motion X value when this location was recorded. This value should be","parent_name":"MAPLocation"},"Classes/MAPLocation.html#/c:objc(cs)MAPLocation(py)deviceMotionY":{"name":"deviceMotionY","abstract":"<p>The device motion Y value when this location was recorded. This value should be","parent_name":"MAPLocation"},"Classes/MAPLocation.html#/c:objc(cs)MAPLocation(py)deviceMotionZ":{"name":"deviceMotionZ","abstract":"<p>The device motion Z value when this location was recorded. This value should be","parent_name":"MAPLocation"},"Classes/MAPLocation.html#/c:objc(cs)MAPLocation(py)deviceRoll":{"name":"deviceRoll","abstract":"<p>The device motion X value when this location was recorded. This value should be","parent_name":"MAPLocation"},"Classes/MAPLocation.html#/c:objc(cs)MAPLocation(py)devicePitch":{"name":"devicePitch","abstract":"<p>The device motion Y value when this location was recorded. This value should be","parent_name":"MAPLocation"},"Classes/MAPLocation.html#/c:objc(cs)MAPLocation(py)deviceYaw":{"name":"deviceYaw","abstract":"<p>The device motion Z value when this location was recorded. This value should be","parent_name":"MAPLocation"},"Classes/MAPLocation.html#/c:objc(cs)MAPLocation(im)isEqualToLocation:":{"name":"-isEqualToLocation:","abstract":"<p>Compares this location with another location to see if they are close enough","parent_name":"MAPLocation"},"Classes/MAPLocation.html#/c:objc(cs)MAPLocation(im)timeString":{"name":"-timeString","abstract":"<p>Returns the capture date as a string in the UTC format.</p>","parent_name":"MAPLocation"},"Classes/MAPImage.html#/c:objc(cs)MAPImage(py)captureDate":{"name":"captureDate","abstract":"<p>The date the image was captured.</p>","parent_name":"MAPImage"},"Classes/MAPImage.html#/c:objc(cs)MAPImage(py)imagePath":{"name":"imagePath","abstract":"<p>The path to the image file on disk.</p>","parent_name":"MAPImage"},"Classes/MAPImage.html#/c:objc(cs)MAPImage(py)location":{"name":"location","abstract":"<p>The location the image was captured.</p>","parent_name":"MAPImage"},"Classes/MAPImage.html#/c:objc(cs)MAPImage(py)author":{"name":"author","abstract":"<p>The user that captured the image.</p>","parent_name":"MAPImage"},"Classes/MAPImage.html#/c:objc(cs)MAPImage(im)init":{"name":"-init","abstract":"<p>Creates an image object with the currently logged in user and the current date.</p>","parent_name":"MAPImage"},"Classes/MAPImage.html#/c:objc(cs)MAPImage(im)initWithPath:":{"name":"-initWithPath:","abstract":"<p>Creates an image object with the currently logged in user and the current date.","parent_name":"MAPImage"},"Classes/MAPImage.html#/c:objc(cs)MAPImage(im)loadImage":{"name":"-loadImage","abstract":"<p>Loads the full-size image file as an <code>UIImage</code>.</p>","parent_name":"MAPImage"},"Classes/MAPImage.html#/c:objc(cs)MAPImage(im)loadThumbnailImage":{"name":"-loadThumbnailImage","abstract":"<p>Loads a low resulution version of the image file as an <code>UIImage</code>.</p>","parent_name":"MAPImage"},"Classes/MAPImage.html#/c:objc(cs)MAPImage(im)thumbPath":{"name":"-thumbPath","abstract":"<p>Returns the file path to the thumbnail.</p>","parent_name":"MAPImage"},"Classes/MAPImage.html#/c:objc(cs)MAPImage(im)isLocked":{"name":"-isLocked","abstract":"<p>Returns the lock status. When a <code>MAPImage</code> is scheduled for processing or","parent_name":"MAPImage"},"Classes/MAPFileManager.html#/c:objc(cs)MAPFileManager(cm)getSequences:":{"name":"+getSequences:","abstract":"<p>Get&rsquo;s all the sequences synchronously.</p>","parent_name":"MAPFileManager"},"Classes/MAPFileManager.html#/c:objc(cs)MAPFileManager(cm)getSequencesAsync:done:":{"name":"+getSequencesAsync:done:","abstract":"<p>Get&rsquo;s all the sequences asynchronously.</p>","parent_name":"MAPFileManager"},"Classes/MAPFileManager.html#/c:objc(cs)MAPFileManager(cm)deleteSequence:":{"name":"+deleteSequence:","abstract":"<p>Deletes a sequence from disk. This deletes everything including images and the","parent_name":"MAPFileManager"},"Classes/MAPDevice.html#/c:objc(cs)MAPDevice(py)make":{"name":"make","abstract":"<p>The make of the device, i.e. <q>Apple</q>.</p>","parent_name":"MAPDevice"},"Classes/MAPDevice.html#/c:objc(cs)MAPDevice(py)model":{"name":"model","abstract":"<p>The model of the device, i.e. <q>iPhone 8</q>.</p>","parent_name":"MAPDevice"},"Classes/MAPDevice.html#/c:objc(cs)MAPDevice(py)UUID":{"name":"UUID","abstract":"<p>A unique id of the device.</p>","parent_name":"MAPDevice"},"Classes/MAPDevice.html#/c:objc(cs)MAPDevice(py)isExternal":{"name":"isExternal","abstract":"<p>Defines if the device is an external or an internal device. If the device is","parent_name":"MAPDevice"},"Classes/MAPDevice.html#/c:objc(cs)MAPDevice(im)initWithMake:andModel:andUUID:isExternal:":{"name":"-initWithMake:andModel:andUUID:isExternal:","abstract":"<p>Creates a device object.</p>","parent_name":"MAPDevice"},"Classes/MAPDevice.html#/c:objc(cs)MAPDevice(cm)thisDevice":{"name":"+thisDevice","abstract":"<p>Returns the device the app is running on.</p>","parent_name":"MAPDevice"},"Classes/MAPDevice.html":{"name":"MAPDevice","abstract":"<p>The <code>MAPDevice</code> class encapsulates the information about a device used for"},"Classes/MAPFileManager.html":{"name":"MAPFileManager","abstract":"<p>The <code>MAPFileManager</code> class contains methods for getting and deleting sequences.</p>"},"Classes/MAPImage.html":{"name":"MAPImage","abstract":"<p>The <code>MAPImage</code> class encapsulates the information about an image.</p>"},"Classes/MAPLocation.html":{"name":"MAPLocation","abstract":"<p>The <code>MAPLocation</code> class encapsulates the information about a location.</p>"},"Classes/MAPSequence.html":{"name":"MAPSequence","abstract":"<p>The MAPSequence class describes a sequence. A sequence consists of images and"},"Classes/MAPUser.html#/c:objc(cs)MAPUser(py)userName":{"name":"userName","abstract":"<p>The user&rsquo;s username. It can be changed by the user.</p>","parent_name":"MAPUser"},"Classes/MAPUser.html#/c:objc(cs)MAPUser(py)userKey":{"name":"userKey","abstract":"<p>The unique key to identify the user. The userKey never changes.</p>","parent_name":"MAPUser"},"Classes/MAPUser.html#/c:objc(cs)MAPUser(py)userEmail":{"name":"userEmail","abstract":"<p>The user&rsquo;s email adress. It can be changed by the user. It will only be","parent_name":"MAPUser"},"Classes/MAPUser.html#/c:objc(cs)MAPUser(py)accessToken":{"name":"accessToken","abstract":"<p>The user&rsquo;s access token. It will only be non-nil for the currently signed in","parent_name":"MAPUser"},"Classes/MAPUser.html#/c:objc(cs)MAPUser(im)initWithUserName:andUserKey:":{"name":"-initWithUserName:andUserKey:","abstract":"<p>Creates a user object.</p>","parent_name":"MAPUser"},"Classes/MAPUser.html#/c:objc(cs)MAPUser(im)initWithUserName:andUserKey:andUserEmail:andAccessToken:":{"name":"-initWithUserName:andUserKey:andUserEmail:andAccessToken:","abstract":"<p>Creates a user object.</p>","parent_name":"MAPUser"},"Classes/MAPLoginManager.html#/c:objc(cs)MAPLoginManager(cm)signInFromViewController:scope:result:cancelled:":{"name":"+signInFromViewController:scope:result:cancelled:","abstract":"<p>Redirects the user to an authentication page on mapillary.com in Safari.","parent_name":"MAPLoginManager"},"Classes/MAPLoginManager.html#/c:objc(cs)MAPLoginManager(cm)signOut":{"name":"+signOut","abstract":"<p>Signs out the current signed in user and removes all related user data.</p>","parent_name":"MAPLoginManager"},"Classes/MAPLoginManager.html#/c:objc(cs)MAPLoginManager(cm)isSignedIn":{"name":"+isSignedIn","abstract":"<p>Checks if a user is signed in or not.</p>","parent_name":"MAPLoginManager"},"Classes/MAPLoginManager.html#/c:objc(cs)MAPLoginManager(cm)currentUser":{"name":"+currentUser","abstract":"<p>Returns the currently signed in user.</p>","parent_name":"MAPLoginManager"},"Classes/MAPLoginManager.html":{"name":"MAPLoginManager","abstract":"<p>The <code>MAPLoginManager</code> class manages the authentication of Mapillary. The"},"Classes/MAPUser.html":{"name":"MAPUser","abstract":"<p>The <code>MAPUser</code> class encapsulates the information about a user.</p>"},"getting-started.html":{"name":"Getting started"},"Guides.html":{"name":"Guides"},"Authentication.html":{"name":"Authentication"},"Sequences.html":{"name":"Sequences"},"Uploading.html":{"name":"Uploading"}}